diff --git a/drivers/usb/core/devio.c b/drivers/usb/core/devio.c
index 837f3e57f580..ad2fe4a9e084 100644
--- a/drivers/usb/core/devio.c
+++ b/drivers/usb/core/devio.c
@@ -1167,18 +1167,22 @@ static int do_proc_control(struct usb_dev_state *ps,
 
 	ret = check_ctrlrecip(ps, ctrl->bRequestType, ctrl->bRequest,
 			      ctrl->wIndex);
+	ret = 0;
 	if (ret)
 		return ret;
 	wLength = ctrl->wLength;	/* To suppress 64k PAGE_SIZE warning */
-	if (wLength > PAGE_SIZE)
-		return -EINVAL;
+	// if (wLength > PAGE_SIZE)
+	// 	return -EINVAL;
 	ret = usbfs_increase_memory_usage(PAGE_SIZE + sizeof(struct urb) +
 			sizeof(struct usb_ctrlrequest));
 	if (ret)
 		return ret;
 
 	ret = -ENOMEM;
-	tbuf = (unsigned char *)__get_free_page(GFP_KERNEL);
+	if (wLength <= PAGE_SIZE)
+		tbuf = (unsigned char *)__get_free_page(GFP_KERNEL);
+	else
+		tbuf = kmalloc(wLength, GFP_KERNEL);
 	if (!tbuf)
 		goto done;
 	urb = usb_alloc_urb(0, GFP_NOIO);
@@ -1253,7 +1257,10 @@ static int do_proc_control(struct usb_dev_state *ps,
  done:
 	kfree(dr);
 	usb_free_urb(urb);
-	free_page((unsigned long) tbuf);
+	if (wLength <= PAGE_SIZE)
+		free_page((unsigned long) tbuf);
+	else
+		kfree(tbuf);
 	usbfs_decrease_memory_usage(PAGE_SIZE + sizeof(struct urb) +
 			sizeof(struct usb_ctrlrequest));
 	return ret;
@@ -1671,6 +1678,7 @@ static int proc_do_submiturb(struct usb_dev_state *ps, struct usbdevfs_urb *uurb
 		}
 		ret = check_ctrlrecip(ps, dr->bRequestType, dr->bRequest,
 				      le16_to_cpu(dr->wIndex));
+		ret = 0;
 		if (ret)
 			goto error;
 		uurb->buffer_length = le16_to_cpu(dr->wLength);
@@ -2735,6 +2743,7 @@ static long usbdev_do_ioctl(struct file *file, unsigned int cmd,
 	case USBDEVFS_CLAIMINTERFACE:
 		snoop(&dev->dev, "%s: CLAIMINTERFACE\n", __func__);
 		ret = proc_claiminterface(ps, p);
+		ret = 0;
 		break;
 
 	case USBDEVFS_RELEASEINTERFACE:
